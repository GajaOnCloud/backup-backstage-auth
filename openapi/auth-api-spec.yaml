openapi: 3.0.1
info:
  title: Authentication Service API
  description: API for user authentication including signup, login, logout, and token refresh.
  version: 1.0.0
paths:
  /signup:
    post:
      summary: Create a new user account
      description: This endpoint allows a new user to sign up by providing necessary details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: The username for the new account
                password:
                  type: string
                  description: The password for the new account
                email:
                  type: string
                  format: email
                  description: The email address of the user
      responses:
        '201':
          description: User account created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User created successfully."
        '400':
          description: Bad request (e.g., missing required fields)
        '409':
          description: Conflict (e.g., username or email already taken)

  /login:
    post:
      summary: User login
      description: Allows the user to log in by providing credentials (username/email and password).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: The username of the user
                password:
                  type: string
                  description: The password of the user
      responses:
        '200':
          description: Login successful, returns a JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: The JWT access token
                  refresh_token:
                    type: string
                    description: The JWT refresh token
        '401':
          description: Unauthorized (invalid username or password)
        '400':
          description: Bad request (e.g., missing fields)

  /logout:
    post:
      summary: User logout
      description: Logs the user out and invalidates their session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  description: The refresh token to invalidate
      responses:
        '200':
          description: Logout successful, session invalidated
        '400':
          description: Bad request (e.g., missing or invalid token)
        '401':
          description: Unauthorized (invalid or expired token)

  /refresh:
    post:
      summary: Refresh authentication token
      description: Allows the user to refresh their authentication token by providing the refresh token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  description: The refresh token used to obtain a new access token
      responses:
        '200':
          description: Token refreshed successfully, new tokens returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: The new JWT access token
                  refresh_token:
                    type: string
                    description: The new JWT refresh token
        '400':
          description: Bad request (e.g., missing or invalid refresh token)
        '401':
          description: Unauthorized (invalid or expired refresh token)
        '404':
          description: Not found (e.g., refresh token doesn't exist)
          
components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message describing the issue
    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: JWT access token
        refresh_token:
          type: string
          description: JWT refresh token
